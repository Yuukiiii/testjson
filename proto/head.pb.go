// Code generated by protoc-gen-go. DO NOT EDIT.
// source: head.proto

package head

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldType int32

const (
	FieldType_UID      FieldType = 0
	FieldType_DEVICEID FieldType = 1
)

var FieldType_name = map[int32]string{
	0: "UID",
	1: "DEVICEID",
}

var FieldType_value = map[string]int32{
	"UID":      0,
	"DEVICEID": 1,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}

func (FieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1d0bdc0adf338bad, []int{0}
}

type PushType int32

const (
	PushType_PUSH_TYPE_DUFAULT PushType = 0
	PushType_PUSH_TYPE_NETID   PushType = 1
)

var PushType_name = map[int32]string{
	0: "PUSH_TYPE_DUFAULT",
	1: "PUSH_TYPE_NETID",
}

var PushType_value = map[string]int32{
	"PUSH_TYPE_DUFAULT": 0,
	"PUSH_TYPE_NETID":   1,
}

func (x PushType) String() string {
	return proto.EnumName(PushType_name, int32(x))
}

func (PushType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1d0bdc0adf338bad, []int{1}
}

type Head struct {
	MsgTypeName          string   `protobuf:"bytes,1,opt,name=msg_type_name,json=msgTypeName,proto3" json:"msg_type_name,omitempty"`
	Ret                  int32    `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d0bdc0adf338bad, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetMsgTypeName() string {
	if m != nil {
		return m.MsgTypeName
	}
	return ""
}

func (m *Head) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *Head) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterEnum("FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("PushType", PushType_name, PushType_value)
	proto.RegisterType((*Head)(nil), "Head")
}

func init() { proto.RegisterFile("head.proto", fileDescriptor_1d0bdc0adf338bad) }

var fileDescriptor_1d0bdc0adf338bad = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x48, 0x4d, 0x4c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xf2, 0xe3, 0x62, 0xf1, 0x48, 0x4d, 0x4c, 0x11, 0x52,
	0xe2, 0xe2, 0xcd, 0x2d, 0x4e, 0x8f, 0x2f, 0xa9, 0x2c, 0x48, 0x8d, 0xcf, 0x4b, 0xcc, 0x4d, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0xce, 0x2d, 0x4e, 0x0f, 0xa9, 0x2c, 0x48, 0xf5, 0x4b,
	0xcc, 0x4d, 0x15, 0x12, 0xe0, 0x62, 0x2e, 0x4a, 0x2d, 0x91, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0d,
	0x02, 0x31, 0x41, 0x22, 0xd9, 0xa9, 0x95, 0x12, 0xcc, 0x60, 0xb5, 0x20, 0xa6, 0x96, 0x12, 0x17,
	0xa7, 0x5b, 0x66, 0x6a, 0x4e, 0x0a, 0x48, 0x93, 0x10, 0x3b, 0x17, 0x73, 0xa8, 0xa7, 0x8b, 0x00,
	0x83, 0x10, 0x0f, 0x17, 0x87, 0x8b, 0x6b, 0x98, 0xa7, 0xb3, 0xab, 0xa7, 0x8b, 0x00, 0xa3, 0x96,
	0x19, 0x17, 0x47, 0x40, 0x69, 0x71, 0x06, 0x58, 0x89, 0x28, 0x97, 0x60, 0x40, 0x68, 0xb0, 0x47,
	0x7c, 0x48, 0x64, 0x80, 0x6b, 0xbc, 0x4b, 0xa8, 0x9b, 0x63, 0xa8, 0x4f, 0x88, 0x00, 0x83, 0x90,
	0x30, 0x17, 0x3f, 0x42, 0xd8, 0xcf, 0x35, 0x04, 0xa4, 0x2f, 0x89, 0x0d, 0xec, 0x64, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x3b, 0x5c, 0x56, 0xc0, 0x00, 0x00, 0x00,
}
